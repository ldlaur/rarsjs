@top File { (Instruction | Label | Number | Register | Directive | String)* }

@external specialize {Identifier} specializeIdentifier from "./tokens" {
  Register
}

@skip { spaces | newline | LineComment | BlockComment }

@skip {} {
  BlockComment { "/*" (blockCommentContent | blockCommentNewline)* blockCommentEnd }
}

@local tokens {
  blockCommentEnd { "*/" }
  blockCommentNewline { "\n" }
  @else blockCommentContent
}

Label {
  Identifier ":"  // only this pattern is treated as a label
}

@tokens {
  // this is somewhat hacky
  // i should make so that instructions are followed by an expressionlist
  // but that is too complicated
  Instruction { 
    (
      "add" | "slt" | "sltu" | "and" | "or" | "xor" | "sll" | "srl" | "sub" | "sra" | "mul" | "mulh" | "mulu" | "mulhu" | "div" |
              "divu" | "rem" | "remu" |
      "addi" | "slt" | "sltiu" | "andi" | "ori" | "xori" | "slli" | "srli" | "srai" |
      "lb" | "lh" | "lw" | "lbu" | "lhu" | "sb" | "sh" | "sw" |
      "beq" | "bne" | "blt" | "bge" | "bltu" | "bgeu" | "bgt" | "ble" | "bgtu" | "bleu" |
      "beqz" | "bnez" | "blez" | "bgez" | "bltz" | "bgtz" |
      "mv" | "not" | "neg" | "seqz" | "snez" | "sltz" | "sgtz" |
      "j" | "jal" |
      "jr" | "jalr" |
      "ret" |
      "lui" | "auipc" |
      "li" |
      "la" |
      "ecall"
    ) (spaces | newline | @eof)
  }

  Identifier { $[_a-zA-Z] $[_a-zA-Z0-9]* }
  @precedence { Instruction, Identifier, Number }

  spaces[@export] { $[\u0009 \u000b\u00a0]+ }
  newline[@export] { $[\r\n] }
  LineComment { ("//" ![\n]*) | ("#" ![\n]*) }
  String {
    '"' (![\\\n"] | "\\" _)* '"'? |
    "'" (![\\\n'] | "\\" _)* "'"?
  }
  hex { @digit | $[a-fA-F] }
  Number { "-"? (@digit+ | "0x" hex+ | "0b" $[01]+) }
  Directive { ".data" | ".text" | ".globl" | ".byte" | ".half" | ".word" | ".ascii" | ".asciz" | ".string" }
}
